/**
 * 歩のオブジェクト
 */
var fu = function(camp){
  this.name = "歩";
  this.relativePoint = [[0, 1, 0], [0, 0, 1], [0, 0, -1]];
  this.camp = camp;
};

/**
 * 桂馬のオブジェクト
 */
var keima = function(camp){
  this.name = "桂馬";
  this.relativePoint = [[-1, 2, 1], [1, 2, 1], [-1, 2, -1], [1, 2, -1]];
  this.camp = camp;
}

/**
 * 香車のオブジェクト
 */
var kousha = function(camp){
  this.name = "香車";
  this.relativePoint = [[0, 1, 0], [0, 2, 0], [0, 3, 0], [0, 4, 0], [0, 5, 0], [0, 6, 0], [0, 7, 0], [0, 8, 0]];
  this.checkMoveable = [[0, 1, 0]];
  this.camp = camp;
};

/**
 * 銀のオブジェクト
 */
var gin = function(camp){
  this.name = "銀";
  this.relativePoint = [[-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, -1, 0], [1, -1, 0], 
                       [-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, -1, 1], [0, -1, 1], [1, -1, 1], 
                       [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, -1, -1], [0, -1, -1], [1, -1, -1]];
  this.camp = camp;
};

/**
 * 金のオブジェクト
 */
var kin = function(camp){
  this.name = "金";
  this.relativePoint = [[-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, 0, 0], [1, 0, 0], [0, -1, 0], 
                       [-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, 0, 1], [0, 0, 1], [1, 0, 1], 
                       [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, 0, -1], [0, 0, -1], [1, 0, -1]];
  this.camp = camp;
};

/**
 * 成金のオブジェクト
 * 歩、桂馬、香車、銀のオブジェクトから変換される
 */
var narikin = function(camp){
  this.name = "成金";
  this.relativePoint = [[-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, 0, 0], [1, 0, 0], [0, -1, 0],
                       [-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, 0, 1], [0, 0, 1], [1, 0, 1], 
                       [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, 0, -1], [0, 0, -1], [1, 0, -1]];
  this.camp = camp;
  this.preComa = null;
};

/**
 * 角のオブジェクト
 */
var kaku = function(camp){
  this.name = "角";
  this.relativePoint = "";
  this.checkMoveable = [[-1, 1, 1], [1, 1, 1], [-1, -1, 1], [1, -1, 1], [-1, 1, -1], [1, 1, -1], [-1, -1, -1], [1, -1, -1]];
  this.camp = camp;
}

/**
 * 馬のオブジェクト
 */
var nari_kaku = function(camp){
  this.name = "馬";
  this.relativePoint = "";
  this.checkMoveable = [[-1, 1, 1], [1, 1, 1], [-1, -1, 1], [1, -1, 1], [-1, 1, -1], [1, 1, -1], [-1, -1, -1], [1, -1, -1]];
  this.extRelativePoint = [[0, 1, 1], [-1, 0, 1], [1, 0, 1], [0, -1, 1],
                          [-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, 0, 0],[1, 0, 0], [-1, -1, 0], [0, -1, 0], [1, -1, 0],
                          [0, 1, -1], [-1, 0, -1], [1, 0, -1], [0, -1, -1]];
  this.preComa = null;
  this.camp = camp;
}

/**
 * 飛車のオブジェクト
 */
var hisha = function(camp){
  this.name = "飛車";
  this.relativePoint = "";
  this.checkMoveable = [[0, 1, 0], [0, -1, 0], [1, 0, 0], [-1, 0, 0], [0, 0, 1], [0, 0, -1]];
  this.camp = camp;
};

/**
 * 竜のオブジェクト
 */
var nari_hisha = function(camp){
  this.name = "竜";
  this.relativePoint = "";
  this.checkMoveable = [[0, 1, 0], [0, -1, 0], [1, 0, 0], [-1, 0, 0], [0, 0, 1], [0, 0, -1]];
  this.extRelativePoint = [[-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, 0, 1], [1, 0, 1], [-1, -1, 1], [0, -1, 1], [1, -1, 1],
                          [-1, 1, 0], [1, 1, 0], [-1, -1, 0], [1, -1, 0],
                          [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, 0, -1], [1, 0, -1], [-1, -1, -1], [0, -1, -1], [1, -1, -1]];
  this.preComa = null;
  this.camp = camp;
};

/**
 * 玉のオブジェクト
 * 先手の駒として使う
 */
var gyoku = function(){
  this.name = "玉";
  this.relativePoint = [[-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, 0, 0], [1, 0, 0], [-1, -1, 0], [0, -1, 0], [1, -1, 0], 
                       [-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, 0, 1], [0, 0, 1], [1, 0, 1], [-1, -1, 1], [0, -1, 1], [1, -1, 1], 
                       [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, 0, -1], [0, 0, -1], [1, 0, -1], [-1, -1, -1], [0, -1, -1], [1, -1, -1]];
  this.camp = 0;
};

/**
 * 王のオブジェクト
 * 後手の駒として使う
 */
var ou = function(){
  this.name = "王";
  this.relativePoint = [[-1, 1, 0], [0, 1, 0], [1, 1, 0], [-1, 0, 0], [1, 0, 0], [-1, -1, 0], [0, -1, 0], [1, -1, 0], 
                       [-1, 1, 1], [0, 1, 1], [1, 1, 1], [-1, 0, 1], [0, 0, 1], [1, 0, 1], [-1, -1, 1], [0, -1, 1], [1, -1, 1], 
                       [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, 0, -1], [0, 0, -1], [1, 0, -1], [-1, -1, -1], [0, -1, -1], [1, -1, -1]];
  this.camp = 1;
};
